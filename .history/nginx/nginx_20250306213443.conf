user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';

    # Define detailed log format for analysis
    log_format detailed '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       'suspicious_agent="$is_suspicious_agent" '
                       'proxy_headers="$has_proxy_headers" '
                       'aws_service="$is_aws_service"';

    # Enhanced JSON-formatted log for Loki ingestion
    log_format json_log escape=json '{'
        '"timestamp":"$time_iso8601",'
        '"client_ip":"$remote_addr",'
        '"forwarded_for":"$http_x_forwarded_for",'
        '"request_id":"$request_id",'
        '"request_method":"$request_method",'
        '"request_uri":"$request_uri",'
        '"uri_path":"$uri",'
        '"query_string":"$args",'
        '"status_code":$status,'
        '"bytes_sent":$body_bytes_sent,'
        '"request_time":$request_time,'
        '"user_agent":"$http_user_agent",'
        '"http_host":"$host",'
        '"is_suspicious_agent":"$is_suspicious_agent",'
        '"has_proxy_headers":"$has_proxy_headers",'
        '"is_aws_service":"$is_aws_service",'
        '"destination":"$upstream_addr",'
        '"route_decision":"$route_decision"'
    '}';

    
    # Generate request ID if not provided
    map $http_x_request_id $request_id_generated {
        default $http_x_request_id;
        ""      $pid-$msec-$remote_addr-$request_length;
    }
    
    # Track the routing decision made
    map $upstream_addr $route_decision {
        "~*mock-openstack"   "openstack";
        "~*mock-honeypot"    "honeypot";
        default              "unknown";
    }


    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    # Define rate limiting zones - keeping this but won't use it initially
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=5r/s;

    # Define upstream servers
    upstream openstack_services {
        server mock-openstack:8774;  # Mock OpenStack API
    }
    
    upstream honeypot_services {
        server mock-honeypot:8774;  # Mock Honeypot service
    }

    # Maps are kept but won't be used in the simplified configuration
    map $http_user_agent $is_aws_service {
        default 0;
        "~*aws-sdk"      1;
        "~*aws-cli"      1;
        "~*boto"         1;
        "~*aws-amplify"  1;
    }

    map $http_user_agent $is_suspicious_agent {
        default 0;
        "~*nikto"        1;
        "~*nmap"         1;
        "~*sqlmap"       1;
        "~*burpsuite"    1;
        "~*scanbot"      1;
        "~*hydra"        1;
        "~*dirbuster"    1;
        "~*gobuster"     1;
        "~*nuclei"       1;
        "~*postman"      0;
        "~*curl"         0;
        ""               1;
        "~*aws-sdk"      0;
        "~*aws-cli"      0;
        "~*boto"         0;
        "~*aws-amplify"  0;
        # Add TestAgent to suspicious list for testing
        "~*TestAgent"    1;
    }

    map $http_x_forwarded_for$http_proxy$http_via$http_upgrade $has_proxy_headers {
        default 0;
        "~*.*"   1;
    }
    
    server {
        listen 80;
        server_name localhost;
        
        # Common proxy headers - kept at server level
        proxy_set_header Host $host;
        proxy_set_header X-Request-ID $request_id;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        # Simplified API request handling - direct to OpenStack only
        location ~* ^/v[0-9]+/ {
            # UNCOMMENTED security checks to enable conditional routing
            
            # Use JSON logging for Loki
            access_log /var/log/nginx/api_access.log json_log;
            
            # Add headers for debugging
            add_header X-Request-ID $request_id;
            add_header X-Route-Decision $route_decision;

            # Rate limiting is active but gentle
            limit_req zone=api_limit burst=10 nodelay;
            error_page 503 = @honeypot;
            
            # ENABLED conditional routing
            if ($is_aws_service = 1) {
                proxy_pass http://openstack_services;
                access_log /var/log/nginx/api_access.log detailed;
                break;
            }
            if ($is_suspicious_agent = 1) {
                proxy_pass http://honeypot_services;
                access_log /var/log/nginx/honeypot_access.log detailed;
                break;
            }
            if ($has_proxy_headers = 1) {
                proxy_pass http://honeypot_services;
                access_log /var/log/nginx/honeypot_access.log detailed;
                break;
            }

            # Default route for non-suspicious requests
            proxy_pass http://openstack_services;
            
            # Log detailed info for debugging
            access_log /var/log/nginx/api_access.log detailed;
        }
        
        # Keep honeypot location handler
        location @honeypot {
            proxy_pass http://honeypot_services;
            access_log /var/log/nginx/honeypot_access.log json_log;
        }

        # Test endpoint that always goes to the honeypot - good for comparison
        location /test-honeypot/ {
            proxy_pass http://honeypot_services/;
            access_log /var/log/nginx/honeypot_access.log detailed;
        }
        
        # Add direct access to honeypot sessions endpoint
        location /sessions {
            proxy_pass http://honeypot_services/sessions;
            access_log /var/log/nginx/honeypot_access.log detailed;
        }

        # Add direct access to honeypot logs endpoint
        location /honeypot-logs {
            proxy_pass http://honeypot_services/honeypot-logs;
            access_log /var/log/nginx/honeypot_access.log detailed;
        }
        
        # Health check endpoint
        location /health {
            return 200 'API Gateway is operational\n';
        }
        
        # Catch-all for any undefined paths
        location / {
            return 404;
        }
    }
}