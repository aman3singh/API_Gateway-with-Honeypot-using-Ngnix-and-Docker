services:
  nginx-gateway:
    build: ./nginx
    ports:
      - "8080:80"  # Map port 8080 on your Mac to port 80 in the container
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - api-network
    depends_on:
      - mock-openstack
      - mock-honeypot
    restart: on-failure
    #Delayed start to ensure other services are up
    command: sh -c "sleep 10 && nginx -g 'daemon off;'"

  mock-openstack:
    build: ./mock-openstack
    ports:
      - "8774:8774"  # Expose mock OpenStack service port
    networks:
      - api-network
    restart: on-failure

  mock-honeypot:
    build: ./mock-honeypot
    ports:
      - "8775:8774"  # Expose mock honeypot service port (internal port is the same as OpenStack)
    networks:
      - api-network
    restart: on-failure

  # New services for logging and monitoring
  loki:
    image: grafana/loki:2.6.1
    ports:
      - "3100:3100"
    volumes:
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - api-network

  promtail:
    image: grafana/promtail:2.6.1
    volumes:
      - ./promtail/config.yaml:/etc/promtail/config.yaml
      - nginx_logs:/var/log/nginx:ro
    command: -config.file=/etc/promtail/config.yaml
    depends_on:
      - loki
    networks:
      - api-network

  grafana:
    image: grafana/grafana:9.3.2
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - loki
    networks:
      - api-network

networks:
  api-network:
    driver: bridge

volumes:
  nginx_logs:
  grafana_data:
  loki_data:
